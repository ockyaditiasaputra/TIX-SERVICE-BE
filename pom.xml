<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.tiket.tix.project</groupId>
  <artifactId>project</artifactId>
  <packaging>pom</packaging>
  <version>1.0.0-0-SNAPSHOT</version>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.0.4.RELEASE</version>
  </parent>

  <scm>
    <connection>scm:git:git@github.com:ockyaditiasaputra/TIX-SERVICE-BE.git</connection>
    <developerConnection>scm:git:git@github.com:ockyaditiasaputra/TIX-SERVICE-BE.git</developerConnection>
    <url>https://github.com/ockyaditiasaputra/TIX-SERVICE-BE.git</url>
    <tag>HEAD</tag>
  </scm>

  <distributionManagement>
    <repository>
      <id>central</id>
      <name>localhost-releases</name>
      <url>http://artifactoryms.tiket.com:8081/artifactory/libs-release-local</url>
    </repository>
    <snapshotRepository>
      <id>snapshots</id>
      <name>localhost-snapshots</name>
      <url>http://artifactoryms.tiket.com:8081/artifactory/libs-snapshot-local</url>
    </snapshotRepository>
  </distributionManagement>

  <repositories>
    <repository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>central</id>
      <name>libs-release</name>
      <url>http://artifactoryms.tiket.com:8081/artifactory/libs-release</url>
    </repository>
    <repository>
      <snapshots/>
      <id>snapshots</id>
      <name>libs-snapshot</name>
      <url>http://artifactoryms.tiket.com:8081/artifactory/libs-snapshot</url>
    </repository>
  </repositories>

  <properties>
    <pojobuilder.version>4.0.1</pojobuilder.version>
    <orika.version>1.5.2</orika.version>
    <fongo.version>2.1.0</fongo.version>
    <flapdoodle.version>2.1.1</flapdoodle.version>
    <allegro.version>2.7.0</allegro.version>
    <springfox.version>2.9.2</springfox.version>
    <retrofit.version>2.4.0</retrofit.version>
    <okhttp.version>3.11.0</okhttp.version>
    <jacoco.maven.plugin.version>0.7.9</jacoco.maven.plugin.version>
    <maven.site.plugin.version>3.6</maven.site.plugin.version>
    <maven.surefire.plugin.version>2.22.0</maven.surefire.plugin.version>
    <maven.failsafe.plugin.version>2.22.0</maven.failsafe.plugin.version>
    <cobertura.version>2.7</cobertura.version>
    <android-json.version>0.0.20131108.vaadin1</android-json.version>
    <tix.common.version>1.3.0</tix.common.version>
    <maven.release.plugin>2.5.3</maven.release.plugin>
    <maven.deploy.plugin>2.8.2</maven.deploy.plugin>
    <maven.source.plugin>3.0.1</maven.source.plugin>
    <powermock.version>1.7.1</powermock.version>
    <mockito-core.version>2.8.9</mockito-core.version>
    <jsr305.version>3.0.2</jsr305.version>
    <org.mapstruct.version>1.2.0.Final</org.mapstruct.version>
    <sonar.projectKey>${project.groupId}:${project.artifactId}</sonar.projectKey>
    <sonar.qube.version>3.2</sonar.qube.version>
    <sonar.projectVersion>1.0</sonar.projectVersion>
    <sonar.language>java</sonar.language>
    <sonar.login>fea21352a50558b9fda0e27d7630baea7fa9c1cc</sonar.login>
    <sonar.junit.reportPaths>${project.build.directory}/surefire-reports</sonar.junit.reportPaths>
    <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
    <sonar.jacoco.reportPaths>${project.basedir}/../target/jacoco.exec</sonar.jacoco.reportPaths>
    <currency.version>1.0.0-6</currency.version>
    <tix.flight.common.version>1.0.0-13</tix.flight.common.version>
    <elastic.search.version>6.2.4</elastic.search.version>
    <maven.javadoc.skip>true</maven.javadoc.skip>
    <reactor.scheduler.version>1.0.2</reactor.scheduler.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- =========== Internal Dependency=========== -->
      <dependency>
        <groupId>com.tiket.tix.project</groupId>
        <artifactId>rest-web</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.tiket.tix.project</groupId>
        <artifactId>rest-web-model</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.tiket.tix.project</groupId>
        <artifactId>database-migration</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.tiket.tix.project</groupId>
        <artifactId>inbound-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.tiket.tix.project</groupId>
        <artifactId>inbound-impl</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.tiket.tix.project</groupId>
        <artifactId>service-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.tiket.tix.project</groupId>
        <artifactId>service-impl</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.tiket.tix.project</groupId>
        <artifactId>outbound-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.tiket.tix.project</groupId>
        <artifactId>outbound-impl</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.tiket.tix.project</groupId>
        <artifactId>entity</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.tiket.tix.project</groupId>
        <artifactId>dao</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.tiket.tix.project</groupId>
        <artifactId>libraries</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.tiket.tix.common</groupId>
        <artifactId>rest-web-model</artifactId>
        <version>${tix.common.version}</version>
      </dependency>
      <!-- =========== Internal Dependency=========== -->

      <!--Library will be change to other type that have better performance-->
      <dependency>
        <groupId>net.karneim</groupId>
        <artifactId>pojobuilder</artifactId>
        <version>${pojobuilder.version}</version>
      </dependency>
      <dependency>
        <groupId>ma.glasnost.orika</groupId>
        <artifactId>orika-core</artifactId>
        <version>${orika.version}</version>
      </dependency>
      <dependency>
        <groupId>com.tiket.tix.common.spring</groupId>
        <artifactId>reactor-scheduler-factory-starter</artifactId>
        <version>${reactor.scheduler.version}</version>
      </dependency>
      <!--Library will be change to other type that have better performance-->

      <!--Library not manage by Spring boot-->
      <dependency>
        <groupId>io.springfox</groupId>
        <artifactId>springfox-swagger2</artifactId>
        <version>${springfox.version}</version>
      </dependency>
      <dependency>
        <groupId>io.springfox</groupId>
        <artifactId>springfox-data-rest</artifactId>
        <version>${springfox.version}</version>
      </dependency>
      <dependency>
        <groupId>io.springfox</groupId>
        <artifactId>springfox-swagger-ui</artifactId>
        <version>${springfox.version}</version>
      </dependency>
      <dependency>
        <groupId>com.squareup.retrofit2</groupId>
        <artifactId>retrofit</artifactId>
        <version>${retrofit.version}</version>
      </dependency>
      <dependency>
        <groupId>com.squareup.okhttp3</groupId>
        <artifactId>okhttp</artifactId>
        <version>${okhttp.version}</version>
      </dependency>
      <dependency>
        <groupId>com.squareup.okhttp3</groupId>
        <artifactId>logging-interceptor</artifactId>
        <version>${okhttp.version}</version>
      </dependency>
      <dependency>
        <groupId>com.squareup.retrofit2</groupId>
        <artifactId>converter-jackson</artifactId>
        <version>${retrofit.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>jsr305</artifactId>
        <version>${jsr305.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct-jdk8</artifactId>
        <version>${org.mapstruct.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct-processor</artifactId>
        <version>${org.mapstruct.version}</version>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-module-junit4</artifactId>
        <version>${powermock.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-api-mockito2</artifactId>
        <version>${powermock.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito-core.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.github.fakemongo</groupId>
        <artifactId>fongo</artifactId>
        <version>${fongo.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>de.flapdoodle.embed</groupId>
        <artifactId>de.flapdoodle.embed.mongo</artifactId>
        <version>${flapdoodle.version}</version>
        <scope>test</scope>
      </dependency>
      <!-- https://mvnrepository.com/artifact/pl.allegro.tech/embedded-elasticsearch -->
      <dependency>
        <groupId>pl.allegro.tech</groupId>
        <artifactId>embedded-elasticsearch</artifactId>
        <version>${allegro.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.tiket.tix.flight.common.model</groupId>
        <artifactId>flight-common-model</artifactId>
        <version>${tix.flight.common.version}</version>
      </dependency>
      <dependency>
        <groupId>org.elasticsearch</groupId>
        <artifactId>elasticsearch</artifactId>
        <version>${elastic.search.version}</version>
      </dependency>
      <dependency>
        <groupId>org.elasticsearch.client</groupId>
        <artifactId>transport</artifactId>
        <version>${elastic.search.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.elasticsearch.plugin</groupId>
            <artifactId>transport-netty4-client</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.elasticsearch.plugin</groupId>
        <artifactId>transport-netty4-client</artifactId>
        <version>${elastic.search.version}</version>
      </dependency>
      <!--Library not manage by Spring boot-->

    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <!--<optional>true</optional>-->
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-aop</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.retry</groupId>
      <artifactId>spring-retry</artifactId>
    </dependency>
    <dependency>
      <groupId>io.projectreactor</groupId>
      <artifactId>reactor-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.projectreactor.addons</groupId>
      <artifactId>reactor-extra</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito2</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>de.flapdoodle.embed</groupId>
      <artifactId>de.flapdoodle.embed.mongo</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>pl.allegro.tech</groupId>
      <artifactId>embedded-elasticsearch</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.reactivex.rxjava2</groupId>
      <artifactId>rxjava</artifactId>
    </dependency>
    <dependency>
      <groupId>com.tiket.tix.common</groupId>
      <artifactId>rest-web-model</artifactId>
    </dependency>

  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco.maven.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>${sonar.qube.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <configuration>
          <append>true</append>
          <dataFile>${sonar.jacoco.reportPaths}</dataFile>
          <destFile>${sonar.jacoco.reportPaths}</destFile>
          <rules>
            <rule implementation="org.jacoco.maven.RuleConfiguration">
              <element>BUNDLE</element>
              <limits>
                <limit implementation="org.jacoco.report.check.Limit">
                  <counter>INSTRUCTION</counter>
                  <value>COVEREDRATIO</value>
                  <minimum>0.90</minimum>
                </limit>
                <limit implementation="org.jacoco.report.check.Limit">
                  <counter>LINE</counter>
                  <value>COVEREDRATIO</value>
                  <minimum>0.90</minimum>
                </limit>
              </limits>
            </rule>
          </rules>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>${maven.deploy.plugin}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>${maven.release.plugin}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven.source.plugin}</version>
      </plugin>
    </plugins>
  </build>
  <modules>
    <module>rest-web</module>
    <module>rest-web-model</module>
    <module>service-api</module>
    <module>service-impl</module>
    <module>dao</module>
    <module>entity</module>
    <module>outbound-api</module>
    <module>outbound-impl</module>
    <module>inbound-api</module>
    <module>inbound-impl</module>
    <module>libraries</module>
  </modules>
  <name>tix-project</name>
</project>
